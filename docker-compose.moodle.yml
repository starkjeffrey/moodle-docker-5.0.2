version: '3.8'

services:
  mariadb:
    # Alternative registries (use one):
    # image: ghcr.io/bitnami/mariadb:11.4                 # GitHub Container Registry
    # image: quay.io/bitnami/mariadb:11.4                 # Quay.io
    # image: public.ecr.aws/bitnami/mariadb:11.4          # AWS ECR Public
    image: registry.hub.docker.com/bitnami/mariadb:11.4   # Docker Hub direct
    container_name: moodle-mariadb
    restart: unless-stopped
    env_file:
      - .envs/.mariadb/mariadb.env
    volumes:
      - mariadb_data:/bitnami/mariadb
    networks:
      - moodle-network
    ports:
      - "3306:3306"
    healthcheck:
      test: ['CMD', '/opt/bitnami/scripts/mariadb/healthcheck.sh']
      interval: 15s
      timeout: 5s
      retries: 6

  moodle:
    # Alternative registries (use one):
    # image: ghcr.io/bitnami/moodle:5.0.2                 # GitHub Container Registry
    # image: quay.io/bitnami/moodle:5.0.2                 # Quay.io
    # image: public.ecr.aws/bitnami/moodle:5.0.2          # AWS ECR Public
    image: registry.hub.docker.com/bitnami/moodle:5.0.2    # Docker Hub direct
    container_name: moodle-app
    restart: unless-stopped
    env_file:
      - .envs/.moodle/moodle.env
    volumes:
      - moodle_data:/bitnami/moodle
      - moodledata_data:/bitnami/moodledata
    ports:
      - "80:8080"
      - "443:8443"
    depends_on:
      mariadb:
        condition: service_healthy
    networks:
      - moodle-network
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:8080/ || exit 1']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  mariadb_data:
    driver: local
  moodle_data:
    driver: local
  moodledata_data:
    driver: local

networks:
  moodle-network:
    driver: bridge