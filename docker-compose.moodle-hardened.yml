services:
  redis:
    # Alternative registries (use one):
    # image: ghcr.io/bitnami/redis:8.2                    # GitHub Container Registry
    # image: quay.io/bitnami/redis:8.2                    # Quay.io
    # image: public.ecr.aws/bitnami/redis:8.2             # AWS ECR Public
    image: registry.hub.docker.com/bitnami/redis:7.2      # Docker Hub direct
    container_name: moodle-redis
    restart: unless-stopped
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redispassword}
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
      - REDIS_AOF_ENABLED=yes
    volumes:
      - redis_data:/bitnami/redis/data
    networks:
      - moodle-network
    expose:
      - "6379"
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli --pass $${REDIS_PASSWORD} ping | grep PONG']
      interval: 15s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

  mariadb:
    # Alternative registries (use one):
    # image: ghcr.io/bitnami/mariadb:12.0.2                 # GitHub Container Registry
    # image: quay.io/bitnami/mariadb:12.0.2                 # Quay.io
    # image: public.ecr.aws/bitnami/mariadb:12.0.2          # AWS ECR Public
    image: registry.hub.docker.com/bitnami/mariadb:12.0.2   # Docker Hub direct
    container_name: moodle-mariadb
    restart: unless-stopped
    env_file:
      - .envs/.mariadb/mariadb.env
    environment:
      - MARIADB_CHARACTER_SET=utf8mb4
      - MARIADB_COLLATE=utf8mb4_unicode_ci
    volumes:
      - mariadb_data:/bitnami/mariadb
    networks:
      - moodle-network
    expose:
      - "3306"
    healthcheck:
      test: ['CMD', '/opt/bitnami/scripts/mariadb/healthcheck.sh']
      interval: 15s
      timeout: 5s
      retries: 6
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
      - /var/run/mysqld
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  moodle:
    # Alternative registries (use one):
    # image: ghcr.io/bitnami/moodle:5.0.2                 # GitHub Container Registry
    # image: quay.io/bitnami/moodle:5.0.2                 # Quay.io
    # image: public.ecr.aws/bitnami/moodle:5.0.2          # AWS ECR Public
    image: registry.hub.docker.com/bitnami/moodle:5.0.2    # Docker Hub direct
    container_name: moodle-app
    restart: unless-stopped
    env_file:
      - .envs/.moodle/moodle.env
    environment:
      - MOODLE_DATABASE_HOST=mariadb
      - MOODLE_DATABASE_PORT_NUMBER=3306
      - MOODLE_DATABASE_NAME=bitnami_moodle
      - MOODLE_DATABASE_USER=bn_moodle
      - MOODLE_REDIS_HOST=redis
      - MOODLE_REDIS_PORT_NUMBER=6379
      - MOODLE_REDIS_PASSWORD=${REDIS_PASSWORD:-redispassword}
    volumes:
      - moodle_data:/bitnami/moodle
      - moodledata_data:/bitnami/moodledata
    ports:
      - "127.0.0.1:8080:8080"  # Bind only to localhost
      - "127.0.0.1:8443:8443"  # HTTPS
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - moodle-network
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:8080/ || exit 1']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s  # Moodle needs more time to start
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    tmpfs:
      - /tmp
      - /var/run
      - /var/cache
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 1G

volumes:
  mariadb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/volumes/mariadb
  moodle_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/volumes/moodle
  moodledata_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/volumes/moodledata
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/volumes/redis

networks:
  moodle-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br_moodle
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1