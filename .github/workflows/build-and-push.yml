name: Build and Push Moodle Images to GHCR

on:
  push:
    branches: [ main, production ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  schedule:
    # Weekly build to get security updates
    - cron: '0 2 * * 0'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: pucsr/moodle-hardened

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix=sha-
            type=raw,value=5.0.2
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Moodle image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.moodle-hardened
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      # Build MariaDB custom image
      - name: Build and push MariaDB image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.mariadb-hardened
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/pucsr/mariadb-moodle:11.4
            ${{ env.REGISTRY }}/pucsr/mariadb-moodle:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build backup service image
      - name: Build and push backup service image
        uses: docker/build-push-action@v5
        with:
          context: ./backup-system
          file: ./backup-system/Dockerfile.backup
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/pucsr/moodle-backup:latest
            ${{ env.REGISTRY }}/pucsr/moodle-backup:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Secondary backup to Docker Hub (optional)
  backup-to-dockerhub:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.moodle-hardened
          push: true
          tags: |
            pucsr/moodle:5.0.2
            pucsr/moodle:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Backup to additional registries
  backup-to-quay:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build and push to Quay.io
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.moodle-hardened
          push: true
          tags: |
            quay.io/pucsr/moodle:5.0.2
            quay.io/pucsr/moodle:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max